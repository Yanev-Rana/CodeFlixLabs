[{"code":"#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n\r\nint mountainPeak(int N) {\r\n    char numStr[20];\r\n    sprintf(numStr, \"%d\", N);  // Convert integer to string\r\n    int len = strlen(numStr);\r\n\r\n    if (len < 3) return -1;  // A mountain must have at least 3 digits\r\n\r\n    int i = 0;\r\n\r\n    // Climb up (strictly increasing)\r\n    while (i + 1 < len && numStr[i] < numStr[i + 1]) {\r\n        i++;\r\n    }\r\n\r\n    // Peak can't be first or last\r\n    if (i == 0 || i == len - 1) return -1;\r\n\r\n    // Climb down (strictly decreasing)\r\n    while (i + 1 < len && numStr[i] > numStr[i + 1]) {\r\n        i++;\r\n    }\r\n\r\n    // If we reached the end, it's a valid mountain\r\n    if (i == len - 1) {\r\n        return numStr[i - (len - i - 1)] - '0';  // Return peak digit\r\n    }\r\n\r\n    return -1;  // Not a valid mountain\r\n}\r\n","language":"c","time":"2025-05-08T06:05:23.124Z","isCorrect":false},{"code":"int mountainPeak(int N) {\r\n    char numStr[20];\r\n    sprintf(numStr, \"%d\", N);  // Convert number to string\r\n    int len = strlen(numStr);\r\n\r\n    if (len < 3) return -1;  // A mountain must have at least 3 digits\r\n\r\n    int i = 0;\r\n\r\n    // Climb up (strictly increasing)\r\n    while (i + 1 < len && numStr[i] < numStr[i + 1]) {\r\n        i++;\r\n    }\r\n\r\n    // Peak can't be first or last\r\n    if (i == 0 || i == len - 1) return -1;\r\n\r\n    int peakIndex = i;\r\n\r\n    // Climb down (strictly decreasing)\r\n    while (i + 1 < len && numStr[i] > numStr[i + 1]) {\r\n        i++;\r\n    }\r\n\r\n    // If we reached the end, it's a valid mountain\r\n    if (i == len - 1) {\r\n        return numStr[peakIndex] - '0';  // Return correct peak digit\r\n    }\r\n\r\n    return -1;  // Not a valid mountain\r\n}\r\n","language":"c","time":"2025-05-08T06:06:16.770Z","isCorrect":true}]